
#######################################
# HDF format for dosage genotypes     #
#######################################


recode {

  grmThreads = 1
  grmBatchSize = 1000
  
  threads = 1
  
  run = false
  inputSorted = false
  recodeToRecessive = false
  output = ""
  outputFormat = pdose
  
  tped = ""
  vcf = ""

  tfam = ""

  pgeno = ""

  pdose = ""

  map = ""

  missing-genotype = -9

  hdfdosage = ""

  genotypefiles = ""

  genotypefiletype = ""
  blockSize = 1

  prune = false
  pruneWindow = 10000
  pruneThreshold = 0.8
  pruneKeepSnps = ""
  pruneAwaySnps = ""

  minimumMAF = 0.0
  maximumMAF = 1.0

  hardcall.hardCallThreshold = 0.1
  hardcall.tpedMissingChar = 0

  maximumMissingnessRate = 1.0
}

# Merge multiple h5 files and output the result
merge {

	# Let this true to run the merge
	run = false

	# File with the list of h5 files
	# inputs = ""

	# List of files with individual names. Optional, if missing h5 embedded values are used.
	individuals = ""

	# output = ""

	# Higher value will use more ram and MIGHT speed things up.
	cacheSize = 3000000

	# minimum genotyping frequency
	minimumSNPCoverage = 0.0

	minimumMAF = 0.0

	# plink bim or map file
	genomicMap = ""

	# sort output files by genomic map. ignored if genomicMap is empty
	sortOutput = true

	# includeIndividuals = ""
	# excludeIndividuals = ""

	# includeSNPs = ""
	# excludeSNPs = ""

	# or "pdose" or "big" or "pgenotypeprobabilities" or "tped"
	# outputFormat = "hdfdosage"

	# if outputFormat is tped
	tped {
		hardCallThreshold = 0.1
		missingChar = "0"
	}

	recodeToRecessive = false

	blockSize = 1
}

import {

    threads = 1
	run = false
	
	output = ""
	missingValue = -9
	cleanDuplicates = false
	#inputSorted = false
	minimumMAF = 0.0
	#genotypefiles = ${import.input}
    #genotypefiletype = ${import.inputFormat}

	blockSize = 1

	

}


#######################################
# HDF format for dosage genotypes end #
#######################################

