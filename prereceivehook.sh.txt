/* 
* The MIT License
*
* Copyright (c) 2015 ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE, Switzerland, 
* Group Fellay
*
* Permission is hereby granted, free of charge, to any person obtaining
* a copy of this software and associated documentation files (the "Software"),
* to deal in the Software without restriction, including without limitation 
* the rights to use, copy, modify, merge, publish, distribute, sublicense, 
* and/or sell copies of the Software, and to permit persons to whom the Software
* is furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE 
* SOFTWARE.
*/

#!/bin/sh

CHECKOUT=/home/ibartha/mybiotools/


read oldrev newrev ref

BRANCH=`echo $ref | cut -d/ -f3`
COMMITMESSAGE=`git log --format=%B -n 1 $newrev`

GIT_WORK_TREE=$CHECKOUT git checkout -f $newrev

echo `git rev-parse --short $newrev` > $CHECKOUT/GITCOMMITHASH
# checkout and run

pattern="run-.*"
patternnotrun=".*#DONTRUN.*"
patternclean=".*#CLEAN.*"
if [[ $BRANCH =~ $pattern ]] && [[ !  $COMMITMESSAGE =~ $patternnotrun ]]; then
  PROJECTFOLDER=/svshare/ibartha/runners/$BRANCH/
  WD=$PROJECTFOLDER/wd/

  if [ -e $PROJECTFOLDER/pid ]; then
  parentpid=`cat $PROJECTFOLDER/pid`
  children=`pgrep -P $parentpid`
  echo "Send SIGTERM to $parentpid $children"
  kill  $parentpid
  kill  $children 
  
  sleep 10s
  fi;

  if [[ $COMMITMESSAGE =~ $patternclean  ]] && [[ -d $WD ]];then
    rm -R $WD
  fi;  

  BIN=$PROJECTFOLDER/stage/
  (rm -R -f $BIN &&
  mkdir -p $BIN &&
  mkdir -p $WD) || (echo "Can't remove old stage folder";exit 1)
  INPUT=$PROJECTFOLDER/input/
  if [ -d $INPUT ]; then
  
  if [ -x $CHECKOUT/deploy/build ] && [ -x $CHECKOUT/deploy/run ]; then
    cd $CHECKOUT
    $CHECKOUT/deploy/build $BIN $INPUT
    if [ $? -eq 0 ]; then
      cd $WD
      cp $CHECKOUT/deploy/run $WD

      nohup $CHECKOUT/deploy/run $BIN $INPUT 1> $PROJECTFOLDER/stdout 2> $PROJECTFOLDER/stderr &
      echo $! > $PROJECTFOLDER/pid
    else 
      echo "Build failed"
      exit 1
    fi;
  fi;
  fi;
fi;



